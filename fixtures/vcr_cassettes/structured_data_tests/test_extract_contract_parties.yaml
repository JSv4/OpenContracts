interactions:
- request:
    body: '{"messages":[{"role":"system","content":"<BACKGROUND_CONTEXT>\nYou are
      an expert assistant for document analysis and interpretation. Your primary goal
      is to answer questions accurately based on document ''Test Doc'' (ID: 1).\n\nThis
      document is described as:\n`USC Title 1 - Chapter 1`\n\n**Available Tools:**\nYou
      have access to a comprehensive set of tools for document analysis:\n\n1. **Vector
      Search**: A sophisticated semantic search engine that finds text passages similar
      to your queries.\n2. **Document Summary Access**: Tools to load and analyze
      the document''s markdown summary, including:\n   - Loading full or truncated
      summary content\n   - Calculating token lengths for context management\n3. **Notes
      Analysis**: Tools to retrieve and examine notes attached to this document:\n   -
      Listing all notes with metadata\n   - Accessing specific note content\n   -
      Calculating note token lengths\n\n**Important**: Always check what tools are
      available to you, as additional specialized tools may be provided dynamically
      beyond the core set described above. Use the appropriate tools to gather information
      before answering.\n\n**Guidelines:**\n- Prioritize information retrieved directly
      from the document using these tools\n- We intentionally did not give you the
      entire document initially. \n  Try doing some vector search to get more information
      initially and then iteratively \n  identifying which parts of the document to
      review.  \n- Do not rely solely on the summary or your general knowledge\n-
      Use multiple tools when necessary for comprehensive answers\n- Present your
      findings in clear, helpful markdown format\n- Avoid repeating instructions or
      disclaimers in your responses\n</BACKGROUND_CONTEXT>\n\nYou are a highly-intelligent
      data extraction system with advanced verification capabilities.\n\nEXTRACTION
      METHODOLOGY:\n1. GATHER: Use available tools (similarity_search, load_document_md_summary,
      etc.) to find ALL relevant information\n2. EXTRACT: Identify the specific data
      requested in: \"Extract a list of any private corporations or associations named
      as parties in this legal text.\"\n3. VERIFY: Before outputting, internally validate
      your extraction by:\n   - Confirming the requested information ACTUALLY EXISTS
      in the document\n   - Cross-referencing multiple sources if available\n   -
      Checking for logical consistency (dates in order, numbers reasonable, etc.)\n   -
      Ensuring no placeholder or generic values (like \"N/A\" unless actually in the
      document)\n   - Confirming extracted text actually appears in the source material\n   -
      For lists/collections: searching again with different queries to ensure completeness\n\nCRITICAL
      RULES:\n- If the requested information does not exist or is not applicable to
      this document, return null\n- If a question doesn''t make sense for this document
      type, return null\n- NEVER invent, guess, or infer data that isn''t explicitly
      present\n- If data is not found after thorough search, return null/empty rather
      than guessing\n- If multiple conflicting values exist, choose the most authoritative/recent\n-
      For numeric values, verify they make sense in context\n- For dates, ensure they
      follow logical chronology and are actually present\n- For names/entities, verify
      exact spelling from the source\n- For boolean questions, only return true/false
      if you can definitively answer based on document content\n\nYour response must
      be ONLY the extracted data in the format of: a JSON array of ContractParty values\n\nNo
      explanations, no process description, no confidence scores - just the final
      verified JSON.\n\nJSON Schema for your response:\n```json\n{\n  \"$defs\": {\n    \"ContractParty\":
      {\n      \"description\": \"A party to a contract.\",\n      \"properties\":
      {\n        \"name\": {\n          \"description\": \"Full legal name\",\n          \"title\":
      \"Name\",\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"description\":
      \"Role in contract (e.g., ''Buyer'', ''Seller'', ''Service Provider'')\",\n          \"title\":
      \"Role\",\n          \"type\": \"string\"\n        },\n        \"address\":
      {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\":
      \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\":
      \"Business address if mentioned\",\n          \"title\": \"Address\"\n        }\n      },\n      \"required\":
      [\n        \"name\",\n        \"role\"\n      ],\n      \"title\": \"ContractParty\",\n      \"type\":
      \"object\"\n    }\n  },\n  \"items\": {\n    \"$ref\": \"#/$defs/ContractParty\"\n  },\n  \"type\":
      \"array\"\n}\n```"},{"role":"user","content":"Extract a list of any private
      corporations or associations named as parties in this legal text."}],"model":"gpt-4o-mini","stream":false,"temperature":0.7,"tool_choice":"required","tools":[{"type":"function","function":{"name":"final_result","description":"The
      final response which ends this conversation","parameters":{"additionalProperties":false,"properties":{"response":{"items":{"$ref":"#/$defs/ContractParty"},"type":"array"}},"required":["response"],"type":"object","$defs":{"ContractParty":{"description":"A
      party to a contract.","properties":{"name":{"description":"Full legal name","type":"string"},"role":{"description":"Role
      in contract (e.g., ''Buyer'', ''Seller'', ''Service Provider'')","type":"string"},"address":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Business
      address if mentioned"}},"required":["name","role"],"type":"object"}}}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5549'
      content-type:
      - application/json
      cookie:
      - __cf_bm=v9Slg21i2yr0blW7WDX1hu7JKBc1EZ_aTLYSmJATqOA-1751734072-1.0.1.1-RSuNwUxbx7LA1Ekz1C5d5zepwxxBjV6y9v59Rg.wdc5AZ0Ptfv52eGr9ywiPhBL2Io5Huzg0XMfWomOHBDuBQCR.yu4hknV9TPgPNg_wp.w;
        _cfuvid=kMKUTBGLMaKftLBwLgoFNITkjQukVlSgpJGCbONDQEU-1751734072392-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - pydantic-ai/0.2.16
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.81.0
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '1'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.11
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFPBitswEL37K8Sc42I72WTxrYW2S2mX7qGFshuMIo0dpbKkSnJINuTf
        i+zEdrIp1Acj5s2beXozOkSEgOCQE2Br6lltZPzhT/Jt8/SwSRv+upv++LRxr3r1tN0+2vf7OUwC
        Q682yPyZ9Y7p2kj0QqsOZhapx1A1Xdyli+ksnactUGuOMtAq4+OZjmuhRJwl2SxOFnF6f2KvtWDo
        ICfPESGEHNp/0Kk47iAnyeQcqdE5WiHkfRIhYLUMEaDOCeep8jAZQKaVRxWkq0bKEeC1lgWjUg6N
        u+8wOg9mUSkLmtSf9/a7/vrxcZfyxU/1a+e/rMzDqF9Xem9aQWWjWG/SCO/j+VUzQkDRuuMKRWVh
        0TXSX/EJAWqrpkblg3Y4vIBFZ7Ry+AL58/IIF+nH6NZ5ObLCYtk4Kt96RJXSngaprUnLE3Ls5yF1
        ZaxeuStqUC/curBIXXvNsdvRWUgrAZqLgYKxuja+8Po3tk3TZJp1ZWHYuhE8PYFeeyrHtNnd5EbF
        gqOnop15v2aMsjXygTusG2240CMgGt3+rZxbtTsHhKr+p/wAMIbGIy+MRS7Y5ZWHNIvhVf4rrfe5
        FQwO7VYwLLxAGybCsaTn3QK3dx7rohSqQmusaB8MlKaYZzSb0vsUS4iO0V8AAAD//wMAp8t07T4E
        AAA=
    headers:
      CF-RAY:
      - 95a85aeedfd5359c-DFW
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 05 Jul 2025 16:49:22 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - user-54labie7aicgek5urzpgydpm
      openai-processing-ms:
      - '797'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '803'
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3998867'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 16ms
      x-request-id:
      - req_ed06a10fa51df51db59f4db7cc8e4015
    status:
      code: 200
      message: OK
version: 1
