interactions:
- request:
    body: '{"messages":[{"role":"system","content":"<BACKGROUND_CONTEXT>\nYou are
      an expert assistant for document analysis and interpretation. Your primary goal
      is to answer questions accurately based on document ''Test Doc'' (ID: 1).\n\nThis
      document is described as:\n`USC Title 1 - Chapter 1`\n\n**Available Tools:**\nYou
      have access to a comprehensive set of tools for document analysis:\n\n1. **Vector
      Search**: A sophisticated semantic search engine that finds text passages similar
      to your queries.\n2. **Document Summary Access**: Tools to load and analyze
      the document''s markdown summary, including:\n   - Loading full or truncated
      summary content\n   - Calculating token lengths for context management\n3. **Notes
      Analysis**: Tools to retrieve and examine notes attached to this document:\n   -
      Listing all notes with metadata\n   - Accessing specific note content\n   -
      Calculating note token lengths\n\n**Important**: Always check what tools are
      available to you, as additional specialized tools may be provided dynamically
      beyond the core set described above. Use the appropriate tools to gather information
      before answering.\n\n**Guidelines:**\n- Prioritize information retrieved directly
      from the document using these tools\n- We intentionally did not give you the
      entire document initially. \n  Try doing some vector search to get more information
      initially and then iteratively \n  identifying which parts of the document to
      review.  \n- Do not rely solely on the summary or your general knowledge\n-
      Use multiple tools when necessary for comprehensive answers\n- Present your
      findings in clear, helpful markdown format\n- Avoid repeating instructions or
      disclaimers in your responses\n</BACKGROUND_CONTEXT>\n\nYou are a highly-intelligent
      data extraction system with advanced verification capabilities.\n\nEXTRACTION
      METHODOLOGY:\n1. GATHER: Use available tools (similarity_search, load_document_md_summary,
      etc.) to find ALL relevant information\n2. EXTRACT: Identify the specific data
      requested in: \"List the main sections or headings in this document.\"\n3. VERIFY:
      Before outputting, internally validate your extraction by:\n   - Cross-referencing
      multiple sources if available\n   - Checking for logical consistency (dates
      in order, numbers reasonable, etc.)\n   - Ensuring no placeholder or generic
      values (like \"N/A\" unless actually in the document)\n   - Confirming extracted
      text actually appears in the source material\n   - For lists/collections: searching
      again with different queries to ensure completeness\n\nCRITICAL RULES:\n- If
      data is not found after thorough search, return null/empty rather than guessing\n-
      If multiple conflicting values exist, choose the most authoritative/recent\n-
      For numeric values, verify they make sense in context (e.g., page count > 0)\n-
      For dates, ensure they follow logical chronology\n- For names/entities, verify
      exact spelling from the source\n\nYour response must be ONLY the extracted data
      in the format of: a JSON array of str values\n\nNo explanations, no process
      description, no confidence scores - just the final verified JSON.\n\nJSON Schema
      for your response:\n```json\n{\n  \"items\": {\n    \"type\": \"string\"\n  },\n  \"type\":
      \"array\"\n}\n```"},{"role":"user","content":"List the main sections or headings
      in this document."}],"model":"gpt-4o-mini","stream":false,"temperature":0.7,"tool_choice":"required","tools":[{"type":"function","function":{"name":"final_result","description":"The
      final response which ends this conversation","parameters":{"additionalProperties":false,"properties":{"response":{"items":{"type":"string"},"type":"array"}},"required":["response"],"type":"object"},"strict":true}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3681'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Hf6wgv84rXjOBoSF0y49n0s2Osk4KqTauf7.8eO3HgE-1751730779-1.0.1.1-7elWekVej0r9oC.8A6xu3R_N5tNGkttvHUY6jYDh4sVDWW7qGCItFjaaO2VGqe4vti4M2X73xBmvgMzdRIAgpQ7n23xXYDmisI2QezsMMbI;
        _cfuvid=32cVjIITQZg_7BX04PlqduLY468ZwsOvr98R9xlRbT4-1751730779674-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - pydantic-ai/0.2.16
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.81.0
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '1'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.11
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4xUTW/aQBC9+1eM5owrDAQItzRt0lObJlWTKiBrWY/Ntuvd1c4aJUH898omYIdQ
        qT5Y1rx5M2++vIkAUGU4A5QrEWTpdPzRvdyL798qEb5eP9nlzy8P4+V9mTPzr3ONvZphl79Jhj3r
        g7Sl0xSUNTtYehKB6qjJ5CyZDPvng2kDlDYjXdMKF+KRjUtlVDzoD0ZxfxIn01f2yipJjDN4jAAA
        Ns271mkyesIZ9Ht7S0nMoiCcHZwA0FtdW1AwKw7CBOy1oLQmkKmlm0rrDhCs1akUWreJd8+m8902
        S2idcsKWbn98vl0vL8pw4+9UWD8Mr7r5dqGfXSMor4w8NKmDH+yzo2QAaES54yojdOqJK30cHwCF
        L6qSTKi142aOnthZwzTH2eMcL1fCBfKQQAzXZMgLDTferhUra3iOvTneUaMAkn7t9IlyZVQ4gQ4g
        httKE4PN4dIaDr5qsCO/IcRw4ZxWUpxARxDX5MIT1xKEhitlMmUKnuNii2+q20anvhedyXnKKxb6
        /UiFMTY0+ZuZLl6R7WF9tC2ct0s+otbNVrxKPQluptJdjmgvpJGA1Zv9Q+dt6UIa7B9qko6nk11U
        bG+kRUfTVzDYIHRrnwzPeifipRkFoZoFPdyEFHJFWUttb0NUmbIdIOrU/l7Nqdi7+pUp/id8C0hJ
        LlCWOk+Zkm8rbt081b+Qf7kdutwIRia/VpLSoMjX88goF/tDQH7mQGWaK1OQd1411425S8cDMRiK
        aUI5RtvoLwAAAP//AwCbSFM66wQAAA==
    headers:
      CF-RAY:
      - 95a80bff7b8a4618-DFW
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 05 Jul 2025 15:55:29 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - user-54labie7aicgek5urzpgydpm
      openai-processing-ms:
      - '863'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '866'
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999207'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 11ms
      x-request-id:
      - req_fe05f216f41f0d80ea522c8e7f73c0b1
    status:
      code: 200
      message: OK
version: 1
