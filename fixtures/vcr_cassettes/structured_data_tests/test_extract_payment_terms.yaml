interactions:
- request:
    body: '{"messages":[{"role":"system","content":"<BACKGROUND_CONTEXT>\nYou are
      an expert assistant for document analysis and interpretation. Your primary goal
      is to answer questions accurately based on document ''Test Doc'' (ID: 1).\n\nThis
      document is described as:\n`USC Title 1 - Chapter 1`\n\n**Available Tools:**\nYou
      have access to a comprehensive set of tools for document analysis:\n\n1. **Vector
      Search**: A sophisticated semantic search engine that finds text passages similar
      to your queries.\n2. **Document Summary Access**: Tools to load and analyze
      the document''s markdown summary, including:\n   - Loading full or truncated
      summary content\n   - Calculating token lengths for context management\n3. **Notes
      Analysis**: Tools to retrieve and examine notes attached to this document:\n   -
      Listing all notes with metadata\n   - Accessing specific note content\n   -
      Calculating note token lengths\n\n**Important**: Always check what tools are
      available to you, as additional specialized tools may be provided dynamically
      beyond the core set described above. Use the appropriate tools to gather information
      before answering.\n\n**Guidelines:**\n- Prioritize information retrieved directly
      from the document using these tools\n- We intentionally did not give you the
      entire document initially. \n  Try doing some vector search to get more information
      initially and then iteratively \n  identifying which parts of the document to
      review.  \n- Do not rely solely on the summary or your general knowledge\n-
      Use multiple tools when necessary for comprehensive answers\n- Present your
      findings in clear, helpful markdown format\n- Avoid repeating instructions or
      disclaimers in your responses\n</BACKGROUND_CONTEXT>\n\nYou are a highly-intelligent
      data extraction system with advanced verification capabilities.\n\nEXTRACTION
      METHODOLOGY:\n1. GATHER: Use available tools (similarity_search, load_document_md_summary,
      etc.) to find ALL relevant information\n2. EXTRACT: Identify the specific data
      requested in: \"Extract a list of any payment schedules or financial obligations
      mentioned in the text.\"\n3. VERIFY: Before outputting, internally validate
      your extraction by:\n   - Confirming the requested information ACTUALLY EXISTS
      in the document\n   - Cross-referencing multiple sources if available\n   -
      Checking for logical consistency (dates in order, numbers reasonable, etc.)\n   -
      Ensuring no placeholder or generic values (like \"N/A\" unless actually in the
      document)\n   - Confirming extracted text actually appears in the source material\n   -
      For lists/collections: searching again with different queries to ensure completeness\n\nCRITICAL
      RULES:\n- If the requested information does not exist or is not applicable to
      this document, return null\n- If a question doesn''t make sense for this document
      type, return null\n- NEVER invent, guess, or infer data that isn''t explicitly
      present\n- If data is not found after thorough search, return null/empty rather
      than guessing\n- If multiple conflicting values exist, choose the most authoritative/recent\n-
      For numeric values, verify they make sense in context\n- For dates, ensure they
      follow logical chronology and are actually present\n- For names/entities, verify
      exact spelling from the source\n- For boolean questions, only return true/false
      if you can definitively answer based on document content\n\nYour response must
      be ONLY the extracted data in the format of: a JSON array of PaymentTerm values\n\nNo
      explanations, no process description, no confidence scores - just the final
      verified JSON.\n\nJSON Schema for your response:\n```json\n{\n  \"$defs\": {\n    \"PaymentTerm\":
      {\n      \"description\": \"A payment term in a contract.\",\n      \"properties\":
      {\n        \"amount\": {\n          \"description\": \"Payment amount\",\n          \"title\":
      \"Amount\",\n          \"type\": \"number\"\n        },\n        \"currency\":
      {\n          \"default\": \"USD\",\n          \"description\": \"Currency code\",\n          \"title\":
      \"Currency\",\n          \"type\": \"string\"\n        },\n        \"due_date\":
      {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\":
      \"null\"\n            }\n          ],\n          \"default\": null,\n          \"description\":
      \"When payment is due\",\n          \"title\": \"Due Date\"\n        },\n        \"condition\":
      {\n          \"description\": \"Payment condition or trigger\",\n          \"title\":
      \"Condition\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\":
      [\n        \"amount\",\n        \"condition\"\n      ],\n      \"title\": \"PaymentTerm\",\n      \"type\":
      \"object\"\n    }\n  },\n  \"items\": {\n    \"$ref\": \"#/$defs/PaymentTerm\"\n  },\n  \"type\":
      \"array\"\n}\n```"},{"role":"user","content":"Extract a list of any payment
      schedules or financial obligations mentioned in the text."}],"model":"gpt-4o-mini","stream":false,"temperature":0.7,"tool_choice":"required","tools":[{"type":"function","function":{"name":"final_result","description":"The
      final response which ends this conversation","parameters":{"additionalProperties":false,"properties":{"response":{"items":{"$ref":"#/$defs/PaymentTerm"},"type":"array"}},"required":["response"],"type":"object","$defs":{"PaymentTerm":{"description":"A
      payment term in a contract.","properties":{"amount":{"description":"Payment
      amount","type":"number"},"currency":{"description":"Currency code","type":"string"},"due_date":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"When
      payment is due"},"condition":{"description":"Payment condition or trigger","type":"string"}},"required":["amount","condition"],"type":"object"}}}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5727'
      content-type:
      - application/json
      cookie:
      - __cf_bm=v9Slg21i2yr0blW7WDX1hu7JKBc1EZ_aTLYSmJATqOA-1751734072-1.0.1.1-RSuNwUxbx7LA1Ekz1C5d5zepwxxBjV6y9v59Rg.wdc5AZ0Ptfv52eGr9ywiPhBL2Io5Huzg0XMfWomOHBDuBQCR.yu4hknV9TPgPNg_wp.w;
        _cfuvid=kMKUTBGLMaKftLBwLgoFNITkjQukVlSgpJGCbONDQEU-1751734072392-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - pydantic-ai/0.2.16
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.81.0
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '1'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.11
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFPBbtswDL37KwSd4yF20qTzrSk27FA06dZuw9rAYGTa1iZLqiQXLYL8
        +2A5sZ00A+aDIfDxkU+P1DYghPKMJoSyEhyrtAgXz+PlVTHJrr+93M3cr5frT6+fn2F5Dzfl7RUd
        NQy1+Y3MHVgfmKq0QMeVbGFmEBw2VaP5RTSfTOOLsQcqlaFoaIV24VSFFZc8jMfxNBzPw+hyzy4V
        Z2hpQh4DQgjZ+n+jU2b4ShPia/lIhdZCgTTpkgihRokmQsFabh1IR0c9yJR0KBvpshZiADilRMpA
        iL5x+20H594sECIVqy8/oodyEd/o258r2Hxf3d0vF1/loF9b+k17QXktWWfSAO/iyUkzQqiEquVy
        CSI1aGvhTviEUDBFXaF0jXa6faIGrVbS4hNNHtc7epS+C86d1wMrDOa1BfHeI5BSOWikepPWe2TX
        zUOoQhu1sSfURj23ZWoQrL/m0O3gIMRLoPXRQKk2qtIudeoP+qbRePqxLUv7rRvAkz3olAMxpM3i
        0ZmKaYYOuJ95t2YMWIlZz+3XDeqMqwEQDG7/Xs652q0DXBb/U74HGEPtMEu1wYyz4yv3aQabV/mv
        tM5nL5haNC+cYeo4mmYiGeZw2C1q36zDKs25LNBow/2DoblOZzHEE7iMMKfBLvgLAAD//wMAhkKL
        lT4EAAA=
    headers:
      CF-RAY:
      - 95a85d19c8fa3aa8-DFW
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 05 Jul 2025 16:50:51 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - user-54labie7aicgek5urzpgydpm
      openai-processing-ms:
      - '424'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '426'
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3998836'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 17ms
      x-request-id:
      - req_e2767617a8142113a5c85a76092322af
    status:
      code: 200
      message: OK
version: 1
