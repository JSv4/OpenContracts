interactions:
- request:
    body: '{"messages":[{"role":"system","content":"<BACKGROUND_CONTEXT>\nYou are
      an expert assistant for document analysis and interpretation. Your primary goal
      is to answer questions accurately based on document ''Test Doc'' (ID: 1).\n\nThis
      document is described as:\n`USC Title 1 - Chapter 1`\n\n**Available Tools:**\nYou
      have access to a comprehensive set of tools for document analysis:\n\n1. **Vector
      Search**: A sophisticated semantic search engine that finds text passages similar
      to your queries.\n2. **Document Summary Access**: Tools to load and analyze
      the document''s markdown summary, including:\n   - Loading full or truncated
      summary content\n   - Calculating token lengths for context management\n3. **Notes
      Analysis**: Tools to retrieve and examine notes attached to this document:\n   -
      Listing all notes with metadata\n   - Accessing specific note content\n   -
      Calculating note token lengths\n\n**Important**: Always check what tools are
      available to you, as additional specialized tools may be provided dynamically
      beyond the core set described above. Use the appropriate tools to gather information
      before answering.\n\n**Guidelines:**\n- Prioritize information retrieved directly
      from the document using these tools\n- We intentionally did not give you the
      entire document initially. \n  Try doing some vector search to get more information
      initially and then iteratively \n  identifying which parts of the document to
      review.  \n- Do not rely solely on the summary or your general knowledge\n-
      Use multiple tools when necessary for comprehensive answers\n- Present your
      findings in clear, helpful markdown format\n- Avoid repeating instructions or
      disclaimers in your responses\n</BACKGROUND_CONTEXT>\n\nYou are a highly-intelligent
      data extraction system with advanced verification capabilities.\n\nEXTRACTION
      METHODOLOGY:\n1. GATHER: Use available tools (similarity_search, load_document_md_summary,
      etc.) to find ALL relevant information\n2. EXTRACT: Identify the specific data
      requested in: \"Extract some data that definitely won''t match this complex
      structure\"\n3. VERIFY: Before outputting, internally validate your extraction
      by:\n   - Confirming the requested information ACTUALLY EXISTS in the document\n   -
      Cross-referencing multiple sources if available\n   - Checking for logical consistency
      (dates in order, numbers reasonable, etc.)\n   - Ensuring no placeholder or
      generic values (like \"N/A\" unless actually in the document)\n   - Confirming
      extracted text actually appears in the source material\n   - For lists/collections:
      searching again with different queries to ensure completeness\n\nCRITICAL RULES:\n-
      If the requested information does not exist or is not applicable to this document,
      return null\n- If a question doesn''t make sense for this document type, return
      null\n- NEVER invent, guess, or infer data that isn''t explicitly present\n-
      If data is not found after thorough search, return null/empty rather than guessing\n-
      If multiple conflicting values exist, choose the most authoritative/recent\n-
      For numeric values, verify they make sense in context\n- For dates, ensure they
      follow logical chronology and are actually present\n- For names/entities, verify
      exact spelling from the source\n- For boolean questions, only return true/false
      if you can definitively answer based on document content\n\nYour response must
      be ONLY the extracted data in the format of: a JSON object matching the ''ComplexModel''
      model structure\n\nNo explanations, no process description, no confidence scores
      - just the final verified JSON.\n\nJSON Schema for your response:\n```json\n{\n  \"properties\":
      {\n    \"nested_data\": {\n      \"additionalProperties\": {\n        \"items\":
      {\n          \"additionalProperties\": {\n            \"type\": \"number\"\n          },\n          \"type\":
      \"object\"\n        },\n        \"type\": \"array\"\n      },\n      \"title\":
      \"Nested Data\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"nested_data\"\n  ],\n  \"title\":
      \"ComplexModel\",\n  \"type\": \"object\"\n}\n```"},{"role":"user","content":"Extract
      some data that definitely won''t match this complex structure"}],"model":"gpt-4o-mini","stream":false,"temperature":2.0,"tool_choice":"required","tools":[{"type":"function","function":{"name":"final_result","description":"The
      final response which ends this conversation","parameters":{"properties":{"nested_data":{"additionalProperties":{"items":{"additionalProperties":{"type":"number"},"type":"object"},"type":"array"},"type":"object"}},"required":["nested_data"],"type":"object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4589'
      content-type:
      - application/json
      cookie:
      - __cf_bm=v9Slg21i2yr0blW7WDX1hu7JKBc1EZ_aTLYSmJATqOA-1751734072-1.0.1.1-RSuNwUxbx7LA1Ekz1C5d5zepwxxBjV6y9v59Rg.wdc5AZ0Ptfv52eGr9ywiPhBL2Io5Huzg0XMfWomOHBDuBQCR.yu4hknV9TPgPNg_wp.w;
        _cfuvid=kMKUTBGLMaKftLBwLgoFNITkjQukVlSgpJGCbONDQEU-1751734072392-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - pydantic-ai/0.2.16
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.81.0
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '1'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.11
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFPJbtswEL3rK4g5W4V3u7rVPTltXTRd0gWBwFAjmTE3k1Sb1PC/B5Ss
        xU4KVAeBmMf35s3CQ0QI8AwSAmxLPZNGxKv98NPVG3X9cf1FfsbN2734KX/M/yzu/27mKxgEhr67
        R+Yb1iumpRHouVY1zCxSj0F1tJiNFpPpZDmpAKkzFIFWGB9PdSy54vF4OJ7Gw0U8Wp7YW80ZOkjI
        r4gQQg7VP/hUGT5AQoaDJiLROVogJO0lQsBqESJAnePOU+Vh0IFMK48qWFelED3Aay1SRoXoEtff
        oXfumkWFSL9v1nZ+Y95/Lffvrlffrja7fP3B71738tXSj6YylJeKtU3q4W08uUhGCCgqay5XVKQW
        XSn8BZ8QoLYoJSofvMPhCGf4MXrpfNur3WJeOiqeN4UqpT0N3qqu3J6QYzsAoQtj9Z27oAa73G1T
        i9RVdfXbGzVGKgtQnk0QjNXS+NTrHVZJl9NZrQrdlnXo6LQL4LWnoseaNawzvTRDT3k14narGGVb
        zDpqt120zLjuAVGv9uduXtKu6+eq+B/5DmAMjccsNRYzzs4r7q5ZDI/wX9faLleGwaH9zRmmnqMN
        88gwp80qgXt0HmWac1WgNZZX7wNyk87HdDyhyxHmEB2jJwAAAP//AwDs+In0LQQAAA==
    headers:
      CF-RAY:
      - 95a860560ab36c62-DFW
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 05 Jul 2025 16:53:03 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - user-54labie7aicgek5urzpgydpm
      openai-processing-ms:
      - '346'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '349'
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999004'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 14ms
      x-request-id:
      - req_19febbfc0fe276b0664a6c9699afe110
    status:
      code: 200
      message: OK
- request:
    body: '{"messages":[{"role":"system","content":"<BACKGROUND_CONTEXT>\nYou are
      an expert assistant for document analysis and interpretation. Your primary goal
      is to answer questions accurately based on document ''Test Doc'' (ID: 1).\n\nThis
      document is described as:\n`USC Title 1 - Chapter 1`\n\n**Available Tools:**\nYou
      have access to a comprehensive set of tools for document analysis:\n\n1. **Vector
      Search**: A sophisticated semantic search engine that finds text passages similar
      to your queries.\n2. **Document Summary Access**: Tools to load and analyze
      the document''s markdown summary, including:\n   - Loading full or truncated
      summary content\n   - Calculating token lengths for context management\n3. **Notes
      Analysis**: Tools to retrieve and examine notes attached to this document:\n   -
      Listing all notes with metadata\n   - Accessing specific note content\n   -
      Calculating note token lengths\n\n**Important**: Always check what tools are
      available to you, as additional specialized tools may be provided dynamically
      beyond the core set described above. Use the appropriate tools to gather information
      before answering.\n\n**Guidelines:**\n- Prioritize information retrieved directly
      from the document using these tools\n- We intentionally did not give you the
      entire document initially. \n  Try doing some vector search to get more information
      initially and then iteratively \n  identifying which parts of the document to
      review.  \n- Do not rely solely on the summary or your general knowledge\n-
      Use multiple tools when necessary for comprehensive answers\n- Present your
      findings in clear, helpful markdown format\n- Avoid repeating instructions or
      disclaimers in your responses\n</BACKGROUND_CONTEXT>\n\nYou are a highly-intelligent
      data extraction system with advanced verification capabilities.\n\nEXTRACTION
      METHODOLOGY:\n1. GATHER: Use available tools (similarity_search, load_document_md_summary,
      etc.) to find ALL relevant information\n2. EXTRACT: Identify the specific data
      requested in: \"Extract some data that definitely won''t match this complex
      structure\"\n3. VERIFY: Before outputting, internally validate your extraction
      by:\n   - Confirming the requested information ACTUALLY EXISTS in the document\n   -
      Cross-referencing multiple sources if available\n   - Checking for logical consistency
      (dates in order, numbers reasonable, etc.)\n   - Ensuring no placeholder or
      generic values (like \"N/A\" unless actually in the document)\n   - Confirming
      extracted text actually appears in the source material\n   - For lists/collections:
      searching again with different queries to ensure completeness\n\nCRITICAL RULES:\n-
      If the requested information does not exist or is not applicable to this document,
      return null\n- If a question doesn''t make sense for this document type, return
      null\n- NEVER invent, guess, or infer data that isn''t explicitly present\n-
      If data is not found after thorough search, return null/empty rather than guessing\n-
      If multiple conflicting values exist, choose the most authoritative/recent\n-
      For numeric values, verify they make sense in context\n- For dates, ensure they
      follow logical chronology and are actually present\n- For names/entities, verify
      exact spelling from the source\n- For boolean questions, only return true/false
      if you can definitively answer based on document content\n\nYour response must
      be ONLY the extracted data in the format of: a JSON object matching the ''ComplexModel''
      model structure\n\nNo explanations, no process description, no confidence scores
      - just the final verified JSON.\n\nJSON Schema for your response:\n```json\n{\n  \"properties\":
      {\n    \"nested_data\": {\n      \"additionalProperties\": {\n        \"items\":
      {\n          \"additionalProperties\": {\n            \"type\": \"number\"\n          },\n          \"type\":
      \"object\"\n        },\n        \"type\": \"array\"\n      },\n      \"title\":
      \"Nested Data\",\n      \"type\": \"object\"\n    }\n  },\n  \"required\": [\n    \"nested_data\"\n  ],\n  \"title\":
      \"ComplexModel\",\n  \"type\": \"object\"\n}\n```"},{"role":"user","content":"Extract
      some data that definitely won''t match this complex structure"},{"role":"assistant","tool_calls":[{"id":"call_XNIr6WpLUuqKRBVJNkfIMtk9","type":"function","function":{"name":"final_result","arguments":"{}"}}]},{"role":"tool","tool_call_id":"call_XNIr6WpLUuqKRBVJNkfIMtk9","content":"1
      validation errors: [\n  {\n    \"type\": \"missing\",\n    \"loc\": [\n      \"nested_data\"\n    ],\n    \"msg\":
      \"Field required\",\n    \"input\": {}\n  }\n]\n\nFix the errors and try again."}],"model":"gpt-4o-mini","stream":false,"temperature":2.0,"tool_choice":"required","tools":[{"type":"function","function":{"name":"final_result","description":"The
      final response which ends this conversation","parameters":{"properties":{"nested_data":{"additionalProperties":{"items":{"additionalProperties":{"type":"number"},"type":"object"},"type":"array"},"type":"object"}},"required":["nested_data"],"type":"object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5006'
      content-type:
      - application/json
      cookie:
      - __cf_bm=v9Slg21i2yr0blW7WDX1hu7JKBc1EZ_aTLYSmJATqOA-1751734072-1.0.1.1-RSuNwUxbx7LA1Ekz1C5d5zepwxxBjV6y9v59Rg.wdc5AZ0Ptfv52eGr9ywiPhBL2Io5Huzg0XMfWomOHBDuBQCR.yu4hknV9TPgPNg_wp.w;
        _cfuvid=kMKUTBGLMaKftLBwLgoFNITkjQukVlSgpJGCbONDQEU-1751734072392-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - pydantic-ai/0.2.16
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.81.0
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.11
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//zFRbb5swFH7nV1h+DlNI6HJ5a9ZpXXbRsnXt1KlCJ+YA3ozt2qZaEuW/
        T4YGSNpJfRwPyJzP3znfubELCKE8pXNCWQGOlVqEi/vharm8toWDzx8vvnBT6Tfm7WV8kxZXN3Tg
        GWr9C5k7sF4xVWqBjivZwMwgOPReo8lZNBnH4+m4BkqVovC0XLswVmHJJQ9Hw1EcDidhNH1kF4oz
        tHROfgaEELKr316nTPEPnZPh4GAp0VrIkc7bS4RQo4S3ULCWWwfS0UEHMiUdSi9dVkL0AKeUSBgI
        0QVunl3v3BULhEiW2fb7p+j8dmY/rKax2C5glX3d4EMvXuN6o2tBWSVZW6Qe3trnJ8EIoRLKhssl
        iMSgrYQ74RNCweRVidJ57XS3p0f4vve1H7wos/X14pv+kZ3D8mri3l9sbyNr38WX9/9zZu35rtdV
        g1llQTxtN0ipHHhtdb/vgpP6UKFybdTanlC9XG6LxCDYOq/+4AQHIbUEWh3NJtVGldolTv3GOugs
        GjVeabc/HTqePYJOORA91lk0eMZfkqIDXg9vuy8MWIFpR+32BqqUqx4Q9HJ/quY5303+XOYvcd8B
        jKF2mCbaYMrZccbdNYP+9/Kva22Va8HUonngDBPH0fh+pJjBYZSo3ViHZZJxmaPRhtebTzOdvB7B
        aAzTCDMa7IO/AAAA//8DANtPrVwHBQAA
    headers:
      CF-RAY:
      - 95a86058be6f6c62-DFW
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 05 Jul 2025 16:53:04 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - user-54labie7aicgek5urzpgydpm
      openai-processing-ms:
      - '667'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '670'
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3998961'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 15ms
      x-request-id:
      - req_4f97fcc16be9548646fe512dcd926746
    status:
      code: 200
      message: OK
version: 1
